import{hJ as g,K as f,a8 as h,ie as E,ig as T,aY as R,d5 as m,bJ as S,az as P,j as A}from"./index-6a6230c9.js";import"./mat3f64-221ce671.js";import"./mat4f64-1413b4a7.js";import"./quat-b2f94896.js";import{e as w}from"./quatf32-6df77abe.js";import"./spatialReferenceEllipsoidUtils-bcb386df.js";import{I as U}from"./I3SBinaryReader-6710baed.js";import{O as C}from"./orientedBoundingBox-34cfa61d.js";const L={analytics:{supportsCacheHint:!1},attachment:{supportsContentType:!1,supportsExifInfo:!1,supportsKeywords:!1,supportsName:!1,supportsSize:!1,supportsCacheHint:!1,supportsResize:!1},data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:!1},editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsAsyncApplyEdits:!1},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1,supportsAsyncConvert3D:!1},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},query:{maxRecordCount:0,maxRecordCountFactor:0,standardMaxRecordCount:0,supportsCacheHint:!1,supportsCentroid:!1,supportsCompactGeometry:!1,supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!1,supportsPercentileStatistics:!1,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsSqlExpression:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsStatistics:!1,tileMaxRecordCount:0}};var y;(function(r){r[r.INVISIBLE=0]="INVISIBLE",r[r.TRANSPARENT=1]="TRANSPARENT",r[r.OPAQUE=2]="OPAQUE"})(y||(y={}));function D(r){return{...v,...r,type:"solid"}}const v={color:g(0,0,0,.2),size:1,extensionLength:0,opacity:1,objectTransparency:y.OPAQUE,hasSlicePlane:!1};g(0,0,0,.2),y.OPAQUE;f();var I;async function q(r,s,t,e,i){const o=[];for(const n of s)if(n&&i.includes(n.name)){const p=`${r}/nodes/${t}/attributes/${n.key}/0`;o.push({url:p,storageInfo:n})}const a=await Promise.allSettled(o.map(n=>h(n.url,{responseType:"array-buffer"}).then(p=>U(n.storageInfo,p.data)))),c=[];for(const n of e){const p={};for(let u=0;u<a.length;u++){const d=a[u];if(d.status==="fulfilled"){const l=d.value;p[o[u].storageInfo.name]=O(l,n)}}c.push(p)}return c}(function(r){r[r.OUTSIDE=0]="OUTSIDE",r[r.INTERSECTS_CENTER_OUTSIDE=1]="INTERSECTS_CENTER_OUTSIDE",r[r.INTERSECTS_CENTER_INSIDE=2]="INTERSECTS_CENTER_INSIDE",r[r.INSIDE=3]="INSIDE"})(I||(I={}));const F=-32768,N=-(2**31);function O(r,s){if(!r)return null;const t=r[s];return E(r)?t===F?null:t:T(r)?t===N?null:t:t!=t?null:t}D({color:[0,0,0,0],opacity:0});new Array(24);w();f();f();C();new Array(72);class H{constructor(s,t,e,i){var a;this._parsedUrl=s,this._portalItem=t,this._apiKey=e,this.signal=i,this._rootDocument=null;const o=(a=this._parsedUrl)==null?void 0:a.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i);o&&(this._urlParts={root:o[1],layerId:parseInt(o[2],10)})}async fetch(){if(!this._urlParts)return null;const s=this._portalItem??await this._portalItemFromServiceItemId();if(s==null)return this._loadFromUrl();const t=await this._findAndLoadRelatedPortalItem(s);return t==null?null:this._loadFeatureLayerFromPortalItem(t)}async fetchPortalItem(){if(!this._urlParts)return null;const s=this._portalItem??await this._portalItemFromServiceItemId();return s==null?null:this._findAndLoadRelatedPortalItem(s)}async _fetchRootDocument(){if(this._rootDocument!=null)return this._rootDocument;if(this._urlParts==null)return this._rootDocument={},{};const s={query:{f:"json",token:this._apiKey},responseType:"json",signal:this.signal},t=`${this._urlParts.root}/SceneServer`;try{const e=await h(t,s);this._rootDocument=e.data}catch{this._rootDocument={}}return this._rootDocument}async _fetchServiceOwningPortalUrl(){var i,o;const s=(i=this._parsedUrl)==null?void 0:i.path,t=s?(o=R)==null?void 0:o.findServerInfo(s):null;if(t!=null&&t.owningSystemUrl)return t.owningSystemUrl;const e=s?s.replace(/(.*\/rest)\/.*/i,"$1")+"/info":null;try{const a=(await h(e,{query:{f:"json"},responseType:"json",signal:this.signal})).data.owningSystemUrl;if(a)return a}catch(a){m(a)}return null}async _findAndLoadRelatedPortalItem(s){try{return(await s.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:this.signal})).find(t=>t.type==="Feature Service")||null}catch(t){return m(t),null}}async _loadFeatureLayerFromPortalItem(s){await s.load({signal:this.signal});const t=await this._findMatchingAssociatedSublayerUrl(s.url??"");return new S({url:t,portalItem:s}).load({signal:this.signal})}async _loadFromUrl(){var t;const s=await this._findMatchingAssociatedSublayerUrl(`${(t=this._urlParts)==null?void 0:t.root}/FeatureServer`);return new S({url:s}).load({signal:this.signal})}async _findMatchingAssociatedSublayerUrl(s){var d;const t=s.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1"),e=(d=this._urlParts)==null?void 0:d.layerId,i=this._fetchRootDocument(),o=l=>{const _={query:{f:"json"},responseType:"json",authMode:l,signal:this.signal};return h(t,_)},a=o("anonymous").catch(()=>o("no-prompt")),[c,n]=await Promise.all([a,i]),p=n&&n.layers,u=c.data&&c.data.layers;if(!Array.isArray(u))throw new Error("expected layers array");if(Array.isArray(p)){for(let l=0;l<Math.min(p.length,u.length);l++)if(p[l].id===e)return`${t}/${u[l].id}`}else if(e!=null&&e<u.length)return`${t}/${u[e].id}`;throw new Error("could not find matching associated sublayer")}async _portalItemFromServiceItemId(){const s=(await this._fetchRootDocument()).serviceItemId;if(!s)return null;const t=new P({id:s,apiKey:this._apiKey}),e=await this._fetchServiceOwningPortalUrl();e!=null&&(t.portal=new A({url:e}));try{return t.load({signal:this.signal})}catch(i){return m(i),null}}}export{H as a,q as i,L as s};
