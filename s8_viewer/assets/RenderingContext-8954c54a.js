import{e as H,b as F}from"./WGLContainer-3675b209.js";import{n as rt,e as nt}from"./programUtils-09df4c8d.js";import{x as p,E as G,ej as L,bB as z,g as at,eX as lt,gB as ot}from"./index-6a6230c9.js";import{e as U,T as et,b as B,u as Y,d as ht}from"./Texture-37d17670.js";import{R as m,T as k,N as R,S as st,I as P,O as T,V as x,F as A,A as a,E as g,C as S,D as N,L as O,G as X,U as y,P as _t,Y as D,_ as v,n as E,i as ut,e as j,X as ft,M}from"./enums-b14466b3.js";import{o as K,W as ct,s as dt,M as Et}from"./OrderIndependentTransparency-e18a4b09.js";import{h as C,x as w,f as W}from"./VertexArrayObject-91d61933.js";import{t as I,f as gt,T as pt}from"./testSVGPremultipliedAlpha-5bd5ed0b.js";import{r as Ft}from"./floatRGBA-6b040bc0.js";import{t as q}from"./doublePrecisionUtils-e3c3d0d8.js";import{t as $}from"./VertexElementDescriptor-2925c6af.js";const bt=r=>{let t="";t+=r[0].toUpperCase();for(let e=1;e<r.length;e++){const s=r[e];s===s.toUpperCase()?(t+="_",t+=s):t+=s.toUpperCase()}return t},Bt=r=>{const t={};for(const e in r)t[bt(e)]=r[e];return rt(t)},Jt=(r,t,e,s)=>{const i=r+r.substring(r.lastIndexOf("/")),n=t+t.substring(t.lastIndexOf("/")),l=Bt(s);return{attributes:e,shaders:{vertexShader:l+H(`${i}.vert`),fragmentShader:l+H(`${n}.frag`)}}};let Z=class{constructor(){this.blend=!1,this.blendColor={r:0,g:0,b:0,a:0},this.blendFunction={srcRGB:m.ONE,dstRGB:m.ZERO,srcAlpha:m.ONE,dstAlpha:m.ZERO},this.blendEquation={mode:k.ADD,modeAlpha:k.ADD},this.colorMask={r:!0,g:!0,b:!0,a:!0},this.faceCulling=!1,this.cullFace=R.BACK,this.frontFace=st.CCW,this.scissorTest=!1,this.scissorRect={x:0,y:0,width:0,height:0},this.depthTest=!1,this.depthFunction=P.LESS,this.clearDepth=1,this.depthWrite=!0,this.depthRange={zNear:0,zFar:1},this.viewport=null,this.stencilTest=!1,this.polygonOffsetFill=!1,this.polygonOffset=[0,0],this.stencilFunction={face:R.FRONT_AND_BACK,func:P.ALWAYS,ref:0,mask:1},this.clearStencil=0,this.stencilWriteMask=1,this.stencilOperation={face:R.FRONT_AND_BACK,fail:T.KEEP,zFail:T.KEEP,zPass:T.KEEP},this.clearColor={r:0,g:0,b:0,a:0},this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.uniformBuffer=null,this.pixelPackBuffer=null,this.pixelUnpackBuffer=null,this.copyReadBuffer=null,this.copyWriteBuffer=null,this.uniformBufferBindingPoints=new Array,this.readFramebuffer=null,this.drawFramebuffer=null,this.renderbuffer=null,this.activeTexture=0,this.textureUnitMap=new Array,this.vertexArrayObject=null}},Rt=class{constructor(t){this._allocations=new Map,t?Error.stackTraceLimit=1/0:(this.add=()=>{},this.remove=()=>{})}add(t){this._allocations.set(t,new Error().stack)}remove(t){this._allocations.delete(t)}get information(){let t="";if(this._allocations.size>0){t+=`${this._allocations.size} live object allocations:
`;const e=new Map;this._allocations.forEach(s=>{e.set(s,(e.get(s)??0)+1)}),e.forEach((s,i)=>{const n=i.split(`
`);n.shift(),n.shift(),t+=`${s}: ${n.shift()}
`,n.forEach(l=>t+=`   ${l}
`)})}return t}};const mt={RECORD_ALLOCATIONS:!1};class Tt{constructor(){for(this._current=new Array,this._max=new Array,this._allocations=new Rt(mt.RECORD_ALLOCATIONS);this._current.length<x.COUNT;)this._current.push(0),this._max.push(0)}resetMax(){for(this._max.length=0;this._max.length<this._current.length;)this._max.push(0)}increment(t,e){const s=++this._current[t];this._max[t]=Math.max(s,this._max[t]),this._allocations.add(e)}decrement(t,e){--this._current[t],this._allocations.remove(e)}get max(){return this._max}get current(){return this._current}get total(){return this.current.reduce((t,e)=>t+e,0)}get resourceInformation(){let t="";if(this.total>0){t+=`Live objects:
`;for(let e=0;e<x.COUNT;++e){const s=this._current[e];s>0&&(t+=`${x[e]}: ${s}
`)}}return t+=this._allocations.information,t}}class xt{constructor(t,e,s){const i=e.textureFilterAnisotropic,n=s.maxAnisotropy??1/0;this.versionString=t.getParameter(t.VERSION),this.maxVertexTextureImageUnits=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxVertexAttributes=t.getParameter(t.MAX_VERTEX_ATTRIBS),this.maxMaxAnisotropy=i?Math.min(t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY),n):1,this.maxTextureImageUnits=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this.maxRenderbufferSize=t.getParameter(t.MAX_RENDERBUFFER_SIZE),this.maxViewportDims=t.getParameter(t.MAX_VIEWPORT_DIMS),F(t)?(this.maxUniformBufferBindings=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS),this.maxVertexUniformBlocks=t.getParameter(t.MAX_VERTEX_UNIFORM_BLOCKS),this.maxFragmentUniformBlocks=t.getParameter(t.MAX_FRAGMENT_UNIFORM_BLOCKS),this.maxUniformBlockSize=t.getParameter(t.MAX_UNIFORM_BLOCK_SIZE),this.uniformBufferOffsetAlignment=t.getParameter(t.UNIFORM_BUFFER_OFFSET_ALIGNMENT),this.maxArrayTextureLayers=t.getParameter(t.MAX_ARRAY_TEXTURE_LAYERS),this.maxSamples=t.getParameter(t.MAX_SAMPLES)):(this.maxUniformBufferBindings=0,this.maxVertexUniformBlocks=0,this.maxFragmentUniformBlocks=0,this.maxUniformBlockSize=0,this.uniformBufferOffsetAlignment=1,this.maxArrayTextureLayers=1,this.maxSamples=1)}}let At=class it{constructor(t){this._rctx=t,this._indexBuffer=this._createIndexbuffer(),this._program=this._createHelperProgram()}static getShaderSources(){return{vertex:`#version 300 es
    precision highp float;

    void main(void) {
      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);
    }`,fragment:`#version 300 es
    precision highp float;

    out vec4 fragColor;

    void main(void) {
      fragColor = vec4(0.0, 0.0, 0.0, 1.0);
    }`}}_createHelperProgram(){const t=it.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}_createIndexbuffer(){return C.createIndex(this._rctx,A.STATIC_DRAW,new Uint32Array([0]))}resetIndicesType(){this._program.compiled&&this._indexBuffer&&(this._rctx.bindVAO(null),this._rctx.useProgram(this._program),this._rctx.bindBuffer(this._indexBuffer,a.ELEMENT_ARRAY_BUFFER),this._rctx.drawElements(g.POINTS,1,S.UNSIGNED_INT,0))}dispose(){this._program.dispose(),this._indexBuffer.dispose()}};class St extends I{constructor(t){super(),this._rctx=t,this._helperProgram=null,this._rctx.type===p.WEBGL2&&G("mac")&&G("chrome")&&(this._program=this._prepareProgram(),this._helperProgram=this._prepareHelperProgram())}dispose(){var t;super.dispose(),(t=this._helperProgram)==null||t.dispose(),this._helperProgram=null}_test(t){const e=this._rctx;e.resetState();const s=new U(1);s.wrapMode=N.CLAMP_TO_EDGE,s.samplingMode=O.NEAREST;const i=new w(e,s),n=C.createIndex(this._rctx,A.STATIC_DRAW,new Uint8Array([0]));e.bindFramebuffer(i),e.setViewport(0,0,1,1),e.useProgram(this._helperProgram),e.bindBuffer(n,a.ELEMENT_ARRAY_BUFFER),e.drawElements(g.POINTS,1,S.UNSIGNED_BYTE,0),e.useProgram(t),e.bindVAO(null),e.drawArrays(g.TRIANGLES,0,258);const l=new Uint8Array(4);return i.readPixels(0,0,1,1,X.RGBA,y.UNSIGNED_BYTE,l),i.dispose(),n.dispose(),l[0]===255}_prepareProgram(){const e=`#version 300 es
    precision highp float;

    out float triangleId;

    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));

    void main(void) {
      triangleId = floor(float(gl_VertexID)/3.0);

      vec3 position = triangleVertices[gl_VertexID % 3];
      float offset = triangleId / ${K.float(85)};
      position.z = 0.5 - offset;

      gl_Position = vec4(position, 1.0);
    }
    `,s=`#version 300 es
    precision highp float;

    in float triangleId;

    out vec4 fragColor;

    void main(void) {
      fragColor = triangleId == ${K.float(85)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);
    }
    `;return this._rctx.programCache.acquire(e,s,new Map([]))}_prepareHelperProgram(){const t=At.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}}let Ot=class extends I{constructor(t){super(),this._rctx=t,this._program=Q(this._rctx,!1),this._obfuscated=Q(this._rctx,!0)}dispose(){super.dispose(),this._obfuscated=L(this._obfuscated)}_test(t){if(G("force-double-precision-obfuscation"))return!0;if(this._obfuscated==null)return!1;const e=this._runProgram(t),s=this._runProgram(this._obfuscated);return e!==0&&(s===0||e/s>5)}_runProgram(t){const e=this._rctx;e.resetState();const s=new U(1);s.wrapMode=N.CLAMP_TO_EDGE,s.samplingMode=O.NEAREST;const i=new w(e,s),n=C.createVertex(e,A.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),l=new W(e,new Map([["position",0]]),{geometry:[new $("position",2,S.UNSIGNED_SHORT,0,4)]},{geometry:n}),_=z(5633261287538229e-9,2626832878767164e-9,1.4349880495278358e6),o=z(563327146742708e-8,2.6268736381334523e6,1434963231608387e-9),h=new Float32Array(6);q(_,h,3);const u=new Float32Array(6);q(o,u,3),e.useProgram(t),t.setUniform3f("u_highA",h[0],h[2],h[4]),t.setUniform3f("u_lowA",h[1],h[3],h[5]),t.setUniform3f("u_highB",u[0],u[2],u[4]),t.setUniform3f("u_lowB",u[1],u[3],u[5]),e.bindFramebuffer(i),e.setViewport(0,0,1,1),e.bindVAO(l),e.drawArrays(g.TRIANGLE_STRIP,0,4);const f=new Uint8Array(4);i.readPixels(0,0,1,1,X.RGBA,y.UNSIGNED_BYTE,f),l.dispose(),i.dispose();const d=(_[2]-o[2])/25,b=Ft(f);return Math.abs(d-b)}};function Q(r,t){const e=`

  precision highp float;

  attribute vec2 position;

  uniform vec3 u_highA;
  uniform vec3 u_lowA;
  uniform vec3 u_highB;
  uniform vec3 u_lowB;

  varying vec4 v_color;

  ${t?"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION":""}

  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION

  vec3 dpPlusFrc(vec3 a, vec3 b) {
    return mix(a, a + b, vec3(notEqual(b, vec3(0))));
  }

  vec3 dpMinusFrc(vec3 a, vec3 b) {
    return mix(vec3(0), a - b, vec3(notEqual(a, b)));
  }

  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
    vec3 t1 = dpPlusFrc(hiA, hiB);
    vec3 e = dpMinusFrc(t1, hiA);
    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;
    return t1 + t2;
  }

  #else

  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
    vec3 t1 = hiA + hiB;
    vec3 e = t1 - hiA;
    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;
    return t1 + t2;
  }

  #endif

  const float MAX_RGBA_FLOAT =
    255.0 / 256.0 +
    255.0 / 256.0 / 256.0 +
    255.0 / 256.0 / 256.0 / 256.0 +
    255.0 / 256.0 / 256.0 / 256.0 / 256.0;

  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);

  vec4 float2rgba(const float value) {
    // Make sure value is in the domain we can represent
    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);

    // Decompose value in 32bit fixed point parts represented as
    // uint8 rgba components. Decomposition uses the fractional part after multiplying
    // by a power of 256 (this removes the bits that are represented in the previous
    // component) and then converts the fractional part to 8bits.
    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);

    // Convert uint8 values (from 0 to 255) to floating point representation for
    // the shader
    const float toU8AsFloat = 1.0 / 255.0;

    return fixedPointU8 * toU8AsFloat;
  }

  void main() {
    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);

    v_color = float2rgba(val.z / 25.0);

    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);
  }
  `,s=`
  precision highp float;

  varying vec4 v_color;

  void main() {
    gl_FragColor = v_color;
  }
  `;return r.programCache.acquire(e,s,new Map([["position",0]]))}let Ct=class extends I{constructor(t){var i,n,l,_,o;if(super(),this._rctx=t,!t.gl)return;if(t.type===p.WEBGL1)return void(this._result=!(!((i=t.capabilities.textureFloat)!=null&&i.textureFloat)||!((n=t.capabilities.colorBufferFloat)!=null&&n.textureFloat)));if(!((l=t.capabilities.textureFloat)!=null&&l.textureFloat&&((_=t.capabilities.colorBufferFloat)!=null&&_.textureFloat)&&((o=t.capabilities.colorBufferFloat)!=null&&o.floatBlend)))return;const e=`
    precision highp float;
    attribute vec2 a_pos;

    void main() {
      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);
    }
    `,s=`
     precision highp float;

     void main() {
      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);
     }
    `;this._program=t.programCache.acquire(e,s,new Map([["a_pos",0]]))}_test(t){const e=this._rctx,s=new U(1);s.wrapMode=N.CLAMP_TO_EDGE,s.dataType=y.FLOAT,s.internalFormat=_t.RGBA32F,s.samplingMode=O.NEAREST;const i=new w(e,s),n=C.createVertex(e,A.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),l=new W(e,new Map([["a_pos",0]]),{geometry:[new $("a_pos",2,S.UNSIGNED_SHORT,0,4)]},{geometry:n});e.useProgram(t);const _=e.getBoundFramebufferObject(),{x:o,y:h,width:u,height:f}=e.getViewport();e.bindFramebuffer(i),e.setViewport(0,0,1,1),e.bindVAO(l),e.drawArrays(g.TRIANGLE_STRIP,0,4);const d=ct({blending:dt});e.setPipelineState(d),e.drawArrays(g.TRIANGLE_STRIP,0,4);const b=e.gl.getError();return e.setViewport(o,h,u,f),e.bindFramebuffer(_),l.dispose(),i.dispose(),b!==1282||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}};class vt extends I{constructor(t){super(),this._rctx=t;const e=`
      precision highp float;
      attribute vec2 a_pos;
      uniform highp sampler2D u_texture;
      varying vec4 v_color;

      float getBit(in float bitset, in int bitIndex) {
        float offset = pow(2.0, float(bitIndex));
        return mod(floor(bitset / offset), 2.0);
      }

      void main() {
        vec4 value = texture2D(u_texture, vec2(0.0));
        float bit = getBit(value.x * 255.0, 1);

        v_color = bit * vec4(1.0);
        gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);
      }
      `,s=`
      precision highp float;
      varying vec4 v_color;

      void main() {
        gl_FragColor = v_color;
      }
      `;this._program=t.programCache.acquire(e,s,new Map([["a_pos",0]]))}_test(t){const e=this._rctx,s=new U(1);s.wrapMode=N.CLAMP_TO_EDGE,s.samplingMode=O.NEAREST;const i=new w(e,s),n=new Uint8Array(4),l=C.createVertex(e,A.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),_=new W(e,new Map([["a_position",0]]),{geometry:[new $("a_position",2,S.SHORT,0,4)]},{geometry:l});e.useProgram(t);const o=new et(e,s,new Uint8Array([2,255,0,0]));t.setUniform1i("u_texture",0),e.bindTexture(o,0);const h=e.getBoundFramebufferObject();e.bindFramebuffer(i),e.useProgram(t);const{x:u,y:f,width:d,height:b}=e.getViewport();e.setViewport(0,0,1,1),e.bindVAO(_),e.drawArrays(g.TRIANGLE_STRIP,0,4),e.setViewport(u,f,d,b),i.readPixels(0,0,1,1,X.RGBA,y.UNSIGNED_BYTE,n),_.dispose(),i.dispose();const V=n[0]!==255||n[1]!==255||n[2]!==255||n[3]!==255;return V&&at.getLogger("esri.views.webgl.testSamplerPrecision").warn(`A problem was detected with your graphics driver. Your driver does not appear to honor sampler precision specifiers, which may result in rendering issues due to numerical instability. We recommend ensuring that your drivers have been updated to the latest version. Applying lowp sampler workaround. [${n[0]}.${n[1]}.${n[2]}.${n[3]}]`),e.bindFramebuffer(h),V}}let Mt=class{constructor(t){this.rctx=t,this.floatBufferBlend=new Ct(t),this.svgPremultipliesAlpha=new gt(t),this.doublePrecisionRequiresObfuscation=new Ot(t),this.ignoresSamplerPrecision=new vt(t),this.drawArraysRequiresIndicesTypeReset=new St(t)}dispose(){this.ignoresSamplerPrecision.dispose(),this.doublePrecisionRequiresObfuscation.dispose(),this.svgPremultipliesAlpha.dispose(),this.floatBufferBlend.dispose(),this.drawArraysRequiresIndicesTypeReset.dispose()}};function Pt(r,t){if(t.disjointTimerQuery)return null;if(F(r))return{drawBuffers:r.drawBuffers.bind(r),MAX_DRAW_BUFFERS:r.MAX_DRAW_BUFFERS,MAX_COLOR_ATTACHMENTS:r.MAX_COLOR_ATTACHMENTS};if(t.drawBuffers)return null;const e=r.getExtension("WEBGL_draw_buffers");return e?{drawBuffers:e.drawBuffersWEBGL.bind(e),MAX_DRAW_BUFFERS:e.MAX_DRAW_BUFFERS_WEBGL,MAX_COLOR_ATTACHMENTS:e.MAX_COLOR_ATTACHMENTS_WEBGL}:null}function Ut(r,t){if(t.compressedTextureETC)return null;const e=r.getExtension("WEBGL_compressed_texture_etc");return e?{COMPRESSED_R11_EAC:e.COMPRESSED_R11_EAC,COMPRESSED_SIGNED_R11_EAC:e.COMPRESSED_SIGNED_R11_EAC,COMPRESSED_RG11_EAC:e.COMPRESSED_RG11_EAC,COMPRESSED_SIGNED_RG11_EAC:e.COMPRESSED_SIGNED_RG11_EAC,COMPRESSED_RGB8_ETC2:e.COMPRESSED_RGB8_ETC2,COMPRESSED_SRGB8_ETC2:e.COMPRESSED_SRGB8_ETC2,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:e.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:e.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_RGBA8_ETC2_EAC:e.COMPRESSED_RGBA8_ETC2_EAC,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC}:null}function Nt(r,t){if(t.compressedTextureS3TC)return null;const e=r.getExtension("WEBGL_compressed_texture_s3tc");return e?{COMPRESSED_RGB_S3TC_DXT1:e.COMPRESSED_RGB_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT1:e.COMPRESSED_RGBA_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT3:e.COMPRESSED_RGBA_S3TC_DXT3_EXT,COMPRESSED_RGBA_S3TC_DXT5:e.COMPRESSED_RGBA_S3TC_DXT5_EXT}:null}function yt(r,t){if(F(r))return{MIN:r.MIN,MAX:r.MAX};if(t.blendMinMax)return null;{const e=r.getExtension("EXT_blend_minmax");return e?{MIN:e.MIN_EXT,MAX:e.MAX_EXT}:null}}function wt(r,t){if(t.textureFilterAnisotropic)return null;const e=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");return e?{MAX_TEXTURE_MAX_ANISOTROPY:e.MAX_TEXTURE_MAX_ANISOTROPY_EXT,TEXTURE_MAX_ANISOTROPY:e.TEXTURE_MAX_ANISOTROPY_EXT}:null}function It(r,t){if(F(r))return{textureFloat:!0,textureFloatLinear:!t.textureFloatLinear&&!!r.getExtension("OES_texture_float_linear"),textureHalfFloat:!0,textureHalfFloatLinear:!0,HALF_FLOAT:r.HALF_FLOAT,R16F:r.R16F,RG16F:r.RG16F,RGBA16F:r.RGBA16F,R32F:r.R32F,RG32F:r.RG32F,RGBA32F:r.RGBA32F,R11F_G11F_B10F:r.R11F_G11F_B10F,RGB16F:r.RGB16F};if(r instanceof WebGLRenderingContext){const e=!t.textureHalfFloat&&r.getExtension("OES_texture_half_float");return{textureFloat:!t.textureFloat&&!!r.getExtension("OES_texture_float"),textureFloatLinear:!t.textureFloatLinear&&!!r.getExtension("OES_texture_float_linear"),textureHalfFloat:!!e,textureHalfFloatLinear:!t.textureHalfFloatLinear&&!!r.getExtension("OES_texture_half_float_linear"),HALF_FLOAT:e?e.HALF_FLOAT_OES:void 0}}return null}function Dt(r,t){if(F(r)){const e=!t.colorBufferHalfFloat&&r.getExtension("EXT_color_buffer_half_float")||!t.colorBufferFloat&&r.getExtension("EXT_color_buffer_float"),s=!t.colorBufferFloat&&r.getExtension("EXT_color_buffer_float"),i=!t.floatBlend&&!t.colorBufferFloat&&r.getExtension("EXT_float_blend");return e||s||i?{textureFloat:!!s,textureHalfFloat:!!e,floatBlend:!!i,R16F:r.R16F,RG16F:r.RG16F,RGBA16F:r.RGBA16F,R32F:r.R32F,RG32F:r.RG32F,RGBA32F:r.RGBA32F,R11F_G11F_B10F:r.R11F_G11F_B10F,RGB16F:r.RGB16F}:null}if(r instanceof WebGLRenderingContext){const e=!t.colorBufferHalfFloat&&r.getExtension("EXT_color_buffer_half_float"),s=!t.colorBufferFloat&&r.getExtension("WEBGL_color_buffer_float"),i=!t.floatBlend&&!t.colorBufferFloat&&r.getExtension("EXT_float_blend");return e||s||i?{textureFloat:!!s,textureHalfFloat:!!e,floatBlend:!!i,RGBA16F:e?e.RGBA16F_EXT:void 0,RGB16F:e?e.RGB16F_EXT:void 0,RGBA32F:s?s.RGBA32F_EXT:void 0}:null}return null}function J(r,t,e,s,i){if(s&&F(r))return!0;if(t[e])return!1;for(const n of i)if(r.getExtension(n))return!0;return!1}function Gt(r,t){if(!F(r)||t.textureNorm16)return null;const e=r.getExtension("EXT_texture_norm16");return e?{R16:e.R16_EXT,RG16:e.RG16_EXT,RGB16:e.RGB16_EXT,RGBA16:e.RGBA16_EXT,R16_SNORM:e.R16_SNORM_EXT,RG16_SNORM:e.RG16_SNORM_EXT,RGB16_SNORM:e.RGB16_SNORM_EXT,RGBA16_SNORM:e.RGBA16_SNORM_EXT}:null}function Lt(r,t){const e=t.loseContext&&r.getExtension("WEBGL_lose_context");return e?{loseRenderingContext:()=>e.loseContext()}:null}function kt(r,t){if(F(r))return{createVertexArray:r.createVertexArray.bind(r),deleteVertexArray:r.deleteVertexArray.bind(r),bindVertexArray:r.bindVertexArray.bind(r)};if(t.vao)return null;const e=r.getExtension("OES_vertex_array_object")||r.getExtension("MOZ_OES_vertex_array_object")||r.getExtension("WEBKIT_OES_vertex_array_object");return e?{createVertexArray:e.createVertexArrayOES.bind(e),deleteVertexArray:e.deleteVertexArrayOES.bind(e),bindVertexArray:e.bindVertexArrayOES.bind(e)}:null}class Xt{constructor(t,e){this._gl=t,this._vertexArrayObject=null,this._compressedTextureETC=null,this._compressedTextureS3TC=null,this._textureFilterAnisotropic=null,this._textureFloat=null,this._colorBufferFloat=null,this._minMaxBlending=null,this._loseContext=null,this._drawBuffers=null,this._textureNorm16=null,this._depthTexture=null,this._textureFloatLinear=null,this._disabledExtensions=e.disabledExtensions||{},this._debugWebGLExtensions=e.debugWebGLExtensions||{}}get drawBuffers(){return this._drawBuffers||(this._drawBuffers=Pt(this._gl,this._disabledExtensions)),this._drawBuffers}get vao(){return this._vertexArrayObject||(this._vertexArrayObject=kt(this._gl,this._disabledExtensions)),this._vertexArrayObject}get compressedTextureETC(){return this._compressedTextureETC||(this._compressedTextureETC=Ut(this._gl,this._disabledExtensions)),this._compressedTextureETC}get compressedTextureS3TC(){return this._compressedTextureS3TC||(this._compressedTextureS3TC=Nt(this._gl,this._disabledExtensions)),this._compressedTextureS3TC}get textureFilterAnisotropic(){return this._textureFilterAnisotropic||(this._textureFilterAnisotropic=wt(this._gl,this._disabledExtensions)),this._textureFilterAnisotropic}get disjointTimerQuery(){return this._disjointTimerQuery||(this._disjointTimerQuery=pt(this._gl,this._disabledExtensions)),this._disjointTimerQuery}get textureFloat(){return this._textureFloat||(this._textureFloat=It(this._gl,this._disabledExtensions)),this._textureFloat}get colorBufferFloat(){return this._colorBufferFloat||(this._colorBufferFloat=Dt(this._gl,this._disabledExtensions)),this._colorBufferFloat}get blendMinMax(){return this._minMaxBlending||(this._minMaxBlending=yt(this._gl,this._disabledExtensions)),this._minMaxBlending}get depthTexture(){return this._depthTexture===null&&(this._depthTexture=J(this._gl,this._disabledExtensions,"depthTexture",!0,["WEBGL_depth_texture","MOZ_WEBGL_depth_texture","WEBKIT_WEBGL_depth_texture"])),this._depthTexture}get loseContext(){return this._loseContext||(this._loseContext=Lt(this._gl,this._debugWebGLExtensions)),this._loseContext}get textureNorm16(){return this._textureNorm16||(this._textureNorm16=Gt(this._gl,this._disabledExtensions)),this._textureNorm16}get textureFloatLinear(){return this._textureFloatLinear===null&&(this._textureFloatLinear=J(this._gl,this._disabledExtensions,"textureFloatLinear",!1,["OES_texture_float_linear"])),this._textureFloatLinear}enable(t){return this[t]}}let ne=class{constructor(t,e){this.gl=t,this.instanceCounter=new Tt,this.programCache=new nt(this),this._state=new Z,this._numOfDrawCalls=0,this._numOfTriangles=0,this.type=F(t)?p.WEBGL2:p.WEBGL1,this._loadExtensions(),this.configure(e)}get gl2(){return this.type===p.WEBGL1?null:this.gl}configure(t){this._capabilities=new Xt(this.gl,t),this._parameters=new xt(this.gl,this._capabilities,t),et.TEXTURE_UNIT_FOR_UPDATES=this._parameters.maxTextureImageUnits-1;const e=this.gl.getParameter(this.gl.VIEWPORT);this._state=new Z,this._state.viewport={x:e[0],y:e[1],width:e[2],height:e[3]},this._stateTracker=new Et({setBlending:s=>{if(s){this.setBlendingEnabled(!0),this.setBlendEquationSeparate(s.opRgb,s.opAlpha),this.setBlendFunctionSeparate(s.srcRgb,s.dstRgb,s.srcAlpha,s.dstAlpha);const i=s.color;this.setBlendColor(i.r,i.g,i.b,i.a)}else this.setBlendingEnabled(!1)},setCulling:s=>{s?(this.setFaceCullingEnabled(!0),this.setCullFace(s.face),this.setFrontFace(s.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:s=>{s?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(s.factor,s.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:s=>{s?(this.setDepthTestEnabled(!0),this.setDepthFunction(s.func)):this.setDepthTestEnabled(!1)},setStencilTest:s=>{if(s){this.setStencilTestEnabled(!0);const i=s.function;this.setStencilFunction(i.func,i.ref,i.mask);const n=s.operation;this.setStencilOp(n.fail,n.zFail,n.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:s=>{s?(this.setDepthWriteEnabled(!0),this.setDepthRange(s.zNear,s.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:s=>{s?this.setColorMask(s.r,s.g,s.b,s.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:s=>{s?this.setStencilWriteMask(s.mask):this.setStencilWriteMask(0)}}),this.enforceState(),L(this._driverTest),this._driverTest=new Mt(this)}dispose(){L(this._driverTest),this.programCache.dispose(),this.bindVAO(null),this.unbindBuffer(a.ARRAY_BUFFER),this.unbindBuffer(a.ELEMENT_ARRAY_BUFFER),this.type===p.WEBGL2&&(this.unbindBuffer(a.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(a.PIXEL_PACK_BUFFER),this.unbindBuffer(a.PIXEL_UNPACK_BUFFER),this.unbindBuffer(a.COPY_READ_BUFFER),this.unbindBuffer(a.COPY_WRITE_BUFFER)),this._state.textureUnitMap.length=0,B()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(t){this._stateTracker.setPipeline(t)}setBlendingEnabled(t){this._state.blend!==t&&(t===!0?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=t,this._stateTracker.invalidateBlending())}externalProgramUpdate(){var t;(t=this._state.program)==null||t.stop(),this._state.program=null}externalTextureUnitUpdate(t,e){for(let s=0;s<t.length;++s)this._state.textureUnitMap[t[s]]=null;e>=0&&(this._state.activeTexture=e)}externalVertexArrayObjectUpdate(){const t=this.capabilities.vao;t&&(t.bindVertexArray(null),this._state.vertexArrayObject=null),this._state.vertexBuffer=null,this._state.indexBuffer=null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(t,e,s,i){t===this._state.blendColor.r&&e===this._state.blendColor.g&&s===this._state.blendColor.b&&i===this._state.blendColor.a||(this.gl.blendColor(t,e,s,i),this._state.blendColor.r=t,this._state.blendColor.g=e,this._state.blendColor.b=s,this._state.blendColor.a=i,this._stateTracker.invalidateBlending())}setBlendFunction(t,e){t===this._state.blendFunction.srcRGB&&e===this._state.blendFunction.dstRGB||(this.gl.blendFunc(t,e),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=t,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=e,this._stateTracker.invalidateBlending())}setBlendFunctionSeparate(t,e,s,i){this._state.blendFunction.srcRGB===t&&this._state.blendFunction.srcAlpha===s&&this._state.blendFunction.dstRGB===e&&this._state.blendFunction.dstAlpha===i||(this.gl.blendFuncSeparate(t,e,s,i),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=s,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=i,this._stateTracker.invalidateBlending())}setBlendEquation(t){this._state.blendEquation.mode!==t&&(this.gl.blendEquation(t),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=t,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(t,e){this._state.blendEquation.mode===t&&this._state.blendEquation.modeAlpha===e||(this.gl.blendEquationSeparate(t,e),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=e,this._stateTracker.invalidateBlending())}setColorMask(t,e,s,i){this._state.colorMask.r===t&&this._state.colorMask.g===e&&this._state.colorMask.b===s&&this._state.colorMask.a===i||(this.gl.colorMask(t,e,s,i),this._state.colorMask.r=t,this._state.colorMask.g=e,this._state.colorMask.b=s,this._state.colorMask.a=i,this._stateTracker.invalidateColorWrite())}setClearColor(t,e,s,i){this._state.clearColor.r===t&&this._state.clearColor.g===e&&this._state.clearColor.b===s&&this._state.clearColor.a===i||(this.gl.clearColor(t,e,s,i),this._state.clearColor.r=t,this._state.clearColor.g=e,this._state.clearColor.b=s,this._state.clearColor.a=i)}setFaceCullingEnabled(t){this._state.faceCulling!==t&&(t===!0?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=t,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(t){this._state.polygonOffsetFill!==t&&(t===!0?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),this._state.polygonOffsetFill=t,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(t,e){this._state.polygonOffset[0]===t&&this._state.polygonOffset[1]===e||(this._state.polygonOffset[0]=t,this._state.polygonOffset[1]=e,this.gl.polygonOffset(t,e),this._stateTracker.invalidatePolygonOffset())}setCullFace(t){this._state.cullFace!==t&&(this.gl.cullFace(t),this._state.cullFace=t,this._stateTracker.invalidateCulling())}setFrontFace(t){this._state.frontFace!==t&&(this.gl.frontFace(t),this._state.frontFace=t,this._stateTracker.invalidateCulling())}setScissorTestEnabled(t){this._state.scissorTest!==t&&(t===!0?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=t)}setScissorRect(t,e,s,i){this._state.scissorRect.x===t&&this._state.scissorRect.y===e&&this._state.scissorRect.width===s&&this._state.scissorRect.height===i||(this.gl.scissor(t,e,s,i),this._state.scissorRect.x=t,this._state.scissorRect.y=e,this._state.scissorRect.width=s,this._state.scissorRect.height=i)}setDepthTestEnabled(t){this._state.depthTest!==t&&(t===!0?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=t,this._stateTracker.invalidateDepthTest())}setClearDepth(t){this._state.clearDepth!==t&&(this.gl.clearDepth(t),this._state.clearDepth=t)}setDepthFunction(t){this._state.depthFunction!==t&&(this.gl.depthFunc(t),this._state.depthFunction=t,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(t){this._state.depthWrite!==t&&(this.gl.depthMask(t),this._state.depthWrite=t,this._stateTracker.invalidateDepthWrite())}setDepthRange(t,e){this._state.depthRange.zNear===t&&this._state.depthRange.zFar===e||(this.gl.depthRange(t,e),this._state.depthRange.zNear=t,this._state.depthRange.zFar=e,this._stateTracker.invalidateDepthWrite())}setStencilTestEnabled(t){this._state.stencilTest!==t&&(t===!0?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=t,this._stateTracker.invalidateStencilTest())}setClearStencil(t){t!==this._state.clearStencil&&(this.gl.clearStencil(t),this._state.clearStencil=t)}setStencilFunction(t,e,s){this._state.stencilFunction.func===t&&this._state.stencilFunction.ref===e&&this._state.stencilFunction.mask===s||(this.gl.stencilFunc(t,e,s),this._state.stencilFunction.face=R.FRONT_AND_BACK,this._state.stencilFunction.func=t,this._state.stencilFunction.ref=e,this._state.stencilFunction.mask=s,this._stateTracker.invalidateStencilTest())}setStencilFunctionSeparate(t,e,s,i){this._state.stencilFunction.face===t&&this._state.stencilFunction.func===e&&this._state.stencilFunction.ref===s&&this._state.stencilFunction.mask===i||(this.gl.stencilFuncSeparate(t,e,s,i),this._state.stencilFunction.face=t,this._state.stencilFunction.func=e,this._state.stencilFunction.ref=s,this._state.stencilFunction.mask=i,this._stateTracker.invalidateStencilTest())}setStencilWriteMask(t){this._state.stencilWriteMask!==t&&(this.gl.stencilMask(t),this._state.stencilWriteMask=t,this._stateTracker.invalidateStencilWrite())}setStencilOp(t,e,s){this._state.stencilOperation.face===R.FRONT_AND_BACK&&this._state.stencilOperation.fail===t&&this._state.stencilOperation.zFail===e&&this._state.stencilOperation.zPass===s||(this.gl.stencilOp(t,e,s),this._state.stencilOperation.face=R.FRONT_AND_BACK,this._state.stencilOperation.fail=t,this._state.stencilOperation.zFail=e,this._state.stencilOperation.zPass=s,this._stateTracker.invalidateStencilTest())}setStencilOpSeparate(t,e,s,i){this._state.stencilOperation.face===t&&this._state.stencilOperation.fail===e&&this._state.stencilOperation.zFail===s&&this._state.stencilOperation.zPass===i||(this.gl.stencilOpSeparate(t,e,s,i),this._state.stencilOperation.face=t,this._state.stencilOperation.fail=e,this._state.stencilOperation.zFail=s,this._state.stencilOperation.zPass=i,this._stateTracker.invalidateStencilTest())}setActiveTexture(t,e=!1){const s=this._state.activeTexture;return t>=0&&(e||t!==this._state.activeTexture)&&(this.gl.activeTexture(D+t),this._state.activeTexture=t),s}clear(t){t&&this.gl.clear(t)}clearSafe(t,e=255){t&&(t&v.COLOR_BUFFER_BIT&&this.setColorMask(!0,!0,!0,!0),t&v.DEPTH_BUFFER_BIT&&this.setDepthWriteEnabled(!0),t&v.STENCIL_BUFFER_BIT&&this.setStencilWriteMask(e),this.gl.clear(t))}drawArrays(t,e,s){B()&&(this._numOfDrawCalls++,this._numOfTriangles+=tt(t,s)),this.gl.drawArrays(t,e,s),Y(this.gl)}drawArraysInstanced(t,e,s,i){var n;(n=this.gl2)==null||n.drawArraysInstanced(t,e,s,i),Y(this.gl)}drawElements(t,e,s,i){if(B()&&(this._numOfDrawCalls++,this._numOfTriangles+=tt(t,e)),this.gl.drawElements(t,e,s,i),B()){const n=ht(this);if(n){const l=this.getBoundVAO(),_=l==null?void 0:l.indexBuffer,o=l==null?void 0:l.vertexBuffers,h={indexBuffer:_,vertexBuffers:o},u={mode:t,count:e,type:s,offset:i},f=(_==null?void 0:_.size)??0,d=i+e,b=f<d?`. Buffer is too small. Attempted to draw index ${d} of ${f}`:"";console.error(`drawElements: ${n}${b}`,{args:u,vao:h})}}}logInfo(){B()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){B()&&(this._numOfDrawCalls=0,this._numOfTriangles=0)}get capabilities(){return this._capabilities}setViewport(t,e,s,i){s=Math.max(Math.round(s),1),i=Math.max(Math.round(i),1);const n=this._state.viewport;n.x===t&&n.y===e&&n.width===s&&n.height===i||(n.x=t,n.y=e,n.width=s,n.height=i,this.gl.viewport(t,e,s,i))}getViewport(){const t=this._state.viewport;return{x:t.x,y:t.y,width:t.width,height:t.height}}useProgram(t){var e;this._state.program!==t&&((e=this._state.program)==null||e.stop(),this._state.program=t,this.gl.useProgram((t==null?void 0:t.glName)??null))}bindTexture(t,e,s=!1){(e>=this.parameters.maxTextureImageUnits||e<0)&&console.error("Input texture unit is out of range of available units!");const i=this._state.textureUnitMap[e];return t==null||t.glName==null?(i!=null&&(this.setActiveTexture(e,s),this.gl.bindTexture(i.descriptor.target,null)),this._state.textureUnitMap[e]=null,i):s||i!==t?(this.setActiveTexture(e,s),this.gl.bindTexture(t.descriptor.target,t.glName),t.applyChanges(),this._state.textureUnitMap[e]=t,i):(t.isDirty&&(this.setActiveTexture(e,s),t.applyChanges()),i)}unbindTexture(t){if(t!=null)for(let e=0;e<this.parameters.maxTextureImageUnits;e++)this._state.textureUnitMap[e]===t&&(this.bindTexture(null,e),this._state.textureUnitMap[e]=null)}bindFramebuffer(t,e=!1){if(e||this._state.readFramebuffer!==t||this._state.drawFramebuffer!==t){if(t==null)return this.gl.bindFramebuffer(E.FRAMEBUFFER,null),this._state.readFramebuffer=null,void(this._state.drawFramebuffer=null);t.initializeAndBind(E.FRAMEBUFFER),this._state.readFramebuffer=t,this._state.drawFramebuffer=t}}bindFramebufferSeparate(t,e,s=!1){const i=e===E.READ_FRAMEBUFFER,n=i?this._state.readFramebuffer:this._state.drawFramebuffer;(s||n!==t)&&(t==null?this.gl.bindFramebuffer(e,null):t.initializeAndBind(e),i?this._state.readFramebuffer=t??null:this._state.drawFramebuffer=t??null)}blitFramebuffer(t,e,s=0,i=0,n=t.width,l=t.height,_=0,o=0,h=e.width,u=e.height,f=v.COLOR_BUFFER_BIT,d=O.NEAREST){this.bindFramebufferSeparate(t,E.READ_FRAMEBUFFER),this.bindFramebufferSeparate(e,E.DRAW_FRAMEBUFFER),this.gl.blitFramebuffer(s,i,n,l,_,o,h,u,f,d)}bindBuffer(t,e){if(t)switch(e??(e=t.bufferType),e){case a.ARRAY_BUFFER:this._state.vertexBuffer=c(this.gl,t,e,this._state.vertexBuffer);break;case a.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=c(this.gl,t,e,this._state.indexBuffer);break;case a.UNIFORM_BUFFER:this._state.uniformBuffer=c(this.gl,t,e,this._state.uniformBuffer);break;case a.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=c(this.gl,t,e,this._state.pixelPackBuffer);break;case a.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=c(this.gl,t,e,this._state.pixelUnpackBuffer);break;case a.COPY_READ_BUFFER:this._state.copyReadBuffer=c(this.gl,t,e,this._state.copyReadBuffer);break;case a.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=c(this.gl,t,e,this._state.copyWriteBuffer)}}bindRenderbuffer(t){const e=this.gl;t||(e.bindRenderbuffer(e.RENDERBUFFER,null),this._state.renderbuffer=null),this._state.renderbuffer!==t&&(e.bindRenderbuffer(e.RENDERBUFFER,t.glName),this._state.renderbuffer=t)}_getBufferBinding(t,e){if(e>=this.parameters.maxUniformBufferBindings||e<0)return console.error("Uniform buffer binding point is out of range!"),null;const s=this._state.uniformBufferBindingPoints;let i=s[e];return i==null&&(i={buffer:null,offset:0,size:0},s[e]=i),i}bindBufferBase(t,e,s){const i=this._getBufferBinding(t,e);i!=null&&(i.buffer===s&&i.offset===0&&i.size===0||(this.gl.bindBufferBase(t,e,s?s.glName:null),i.buffer=s,i.offset=0,i.size=0))}bindBufferRange(t,e,s,i,n){const l=this._getBufferBinding(t,e);if(l!=null&&!(l.buffer===s&&l.offset===i&&l.size===n)){if(i%this._parameters.uniformBufferOffsetAlignment!=0)return void console.error("Uniform buffer binding offset is not a multiple of the context offset alignment");this.gl.bindBufferRange(t,e,s.glName,i,n),l.buffer=s,l.offset=i,l.size=n}}bindUBO(t,e,s,i){e!=null?(B()&&(i??e.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),e.initialize(),s!==void 0&&i!==void 0?this.bindBufferRange(a.UNIFORM_BUFFER,t,e.buffer,s,i):this.bindBufferBase(a.UNIFORM_BUFFER,t,e.buffer)):this.bindBufferBase(a.UNIFORM_BUFFER,t,null)}unbindUBO(t){for(let e=0,s=this._state.uniformBufferBindingPoints.length;e<s;e++){const i=this._state.uniformBufferBindingPoints[e];i!=null&&i.buffer===t.buffer&&this.bindBufferBase(a.UNIFORM_BUFFER,e,null)}}unbindBuffer(t){switch(t){case a.ARRAY_BUFFER:this._state.vertexBuffer=c(this.gl,null,t,this._state.vertexBuffer);break;case a.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=c(this.gl,null,t,this._state.indexBuffer);break;case a.UNIFORM_BUFFER:this._state.uniformBuffer=c(this.gl,null,t,this._state.uniformBuffer);break;case a.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=c(this.gl,null,t,this._state.pixelPackBuffer);break;case a.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=c(this.gl,null,t,this._state.pixelUnpackBuffer);break;case a.COPY_READ_BUFFER:this._state.copyReadBuffer=c(this.gl,null,t,this._state.copyReadBuffer);break;case a.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=c(this.gl,null,t,this._state.copyWriteBuffer)}}bindVAO(t=null){t!=null?this._state.vertexArrayObject!==t&&(t.bind(),this._state.vertexArrayObject=t):this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null)}async clientWaitAsync(t=ot(10)){const e=this.gl,s=e.fenceSync(ut.SYNC_GPU_COMMANDS_COMPLETE,0);if(!s)throw new Error("Client wait failed, could not create sync object");let i;this.instanceCounter.increment(x.Sync,s),e.flush();do await lt(t),i=e.clientWaitSync(s,0,0);while(i===j.TIMEOUT_EXPIRED);if(this.instanceCounter.decrement(x.Sync,s),e.deleteSync(s),i===j.WAIT_FAILED)throw new Error("Client wait failed")}getBoundFramebufferObject(t=E.FRAMEBUFFER){return t===E.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null),this.bindVAO(null),this.bindFramebuffer(null,!0),this.unbindBuffer(a.ARRAY_BUFFER),this.unbindBuffer(a.ELEMENT_ARRAY_BUFFER),this.type===p.WEBGL2&&(this.unbindBuffer(a.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(a.PIXEL_PACK_BUFFER),this.unbindBuffer(a.PIXEL_UNPACK_BUFFER),this.unbindBuffer(a.COPY_READ_BUFFER),this.unbindBuffer(a.COPY_WRITE_BUFFER));for(let t=0;t<this.parameters.maxTextureImageUnits;++t)this.bindTexture(null,t);this.setBlendingEnabled(!1),this.setBlendFunction(m.ONE,m.ZERO),this.setBlendEquation(k.ADD),this.setBlendColor(0,0,0,0),this.setFaceCullingEnabled(!1),this.setCullFace(R.BACK),this.setFrontFace(st.CCW),this.setPolygonOffsetFillEnabled(!1),this.setPolygonOffset(0,0),this.setScissorTestEnabled(!1),this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height),this.setDepthTestEnabled(!1),this.setDepthFunction(P.LESS),this.setDepthRange(0,1),this.setStencilTestEnabled(!1),this.setStencilFunction(P.ALWAYS,0,0),this.setStencilOp(T.KEEP,T.KEEP,T.KEEP),this.setClearColor(0,0,0,0),this.setClearDepth(1),this.setClearStencil(0),this.setColorMask(!0,!0,!0,!0),this.setStencilWriteMask(4294967295),this.setDepthWriteEnabled(!0),this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){var n,l,_;const t=this.capabilities.vao;t&&t.bindVertexArray(null);const{gl:e,gl2:s}=this;for(let o=0;o<this.parameters.maxVertexAttributes;o++)e.disableVertexAttribArray(o);if(this._state.vertexBuffer?e.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):e.bindBuffer(a.ARRAY_BUFFER,null),this._state.indexBuffer?e.bindBuffer(this._state.indexBuffer.bufferType,this._state.indexBuffer.glName):e.bindBuffer(a.ELEMENT_ARRAY_BUFFER,null),s!=null){this._state.uniformBuffer?s.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):s.bindBuffer(a.UNIFORM_BUFFER,null);for(let o=0;o<this._parameters.maxUniformBufferBindings;o++){const h=this._state.uniformBufferBindingPoints[o];if(h!=null){const{buffer:u,offset:f,size:d}=h;u!==null?f===0&&d===0?s.bindBufferBase(a.UNIFORM_BUFFER,o,u.glName):s.bindBufferRange(a.UNIFORM_BUFFER,o,u.glName,f,d):s.bindBufferBase(a.UNIFORM_BUFFER,o,null)}}this._state.pixelPackBuffer?s.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):s.bindBuffer(a.PIXEL_PACK_BUFFER,null),this._state.pixelUnpackBuffer?s.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):s.bindBuffer(a.PIXEL_UNPACK_BUFFER,null),this._state.copyReadBuffer?s.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):s.bindBuffer(a.COPY_READ_BUFFER,null),this._state.copyWriteBuffer?s.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):s.bindBuffer(a.COPY_WRITE_BUFFER,null),s.bindFramebuffer(E.READ_FRAMEBUFFER,null),s.readBuffer(s.BACK),this._state.readFramebuffer&&(s.bindFramebuffer(E.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),s.readBuffer(ft.COLOR_ATTACHMENT0)),s.bindFramebuffer(E.DRAW_FRAMEBUFFER,((n=this._state.drawFramebuffer)==null?void 0:n.glName)??null)}else this._state.readFramebuffer=this._state.drawFramebuffer,e.bindFramebuffer(E.FRAMEBUFFER,((l=this._state.drawFramebuffer)==null?void 0:l.glName)??null);if(t&&this._state.vertexArrayObject){const o=this._state.vertexArrayObject;this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null),this.bindVAO(o)}e.useProgram(((_=this._state.program)==null?void 0:_.glName)??null),e.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a),e.bindRenderbuffer(e.RENDERBUFFER,this._state.renderbuffer?this._state.renderbuffer.glName:null),this._state.blend===!0?e.enable(this.gl.BLEND):e.disable(this.gl.BLEND),e.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha),e.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha),e.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,this._state.clearColor.a),e.clearDepth(this._state.clearDepth),e.clearStencil(this._state.clearStencil),e.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a),e.cullFace(this._state.cullFace),e.depthFunc(this._state.depthFunction),e.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar),this._state.depthTest===!0?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),e.depthMask(this._state.depthWrite),e.frontFace(this._state.frontFace),e.lineWidth(1),this._state.faceCulling===!0?e.enable(e.CULL_FACE):e.disable(e.CULL_FACE),e.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]),this._state.polygonOffsetFill===!0?e.enable(e.POLYGON_OFFSET_FILL):e.disable(e.POLYGON_OFFSET_FILL),e.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height),this._state.scissorTest===!0?e.enable(e.SCISSOR_TEST):e.disable(e.SCISSOR_TEST),e.stencilFunc(this._state.stencilFunction.func,this._state.stencilFunction.ref,this._state.stencilFunction.mask),e.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass),this._state.stencilTest===!0?e.enable(e.STENCIL_TEST):e.disable(e.STENCIL_TEST),e.stencilMask(this._state.stencilWriteMask);for(let o=0;o<this.parameters.maxTextureImageUnits;o++){e.activeTexture(D+o),e.bindTexture(M.TEXTURE_2D,null),e.bindTexture(M.TEXTURE_CUBE_MAP,null),this.type===p.WEBGL2&&(e.bindTexture(M.TEXTURE_3D,null),e.bindTexture(M.TEXTURE_2D_ARRAY,null));const h=this._state.textureUnitMap[o];h!=null&&e.bindTexture(h.descriptor.target,h.glName)}e.activeTexture(D+this._state.activeTexture);const i=this._state.viewport;e.viewport(i.x,i.y,i.width,i.height),this.resetInfo()}_loadExtensions(){this.type===p.WEBGL1&&this.gl.getExtension("OES_element_index_uint"),this.gl.getExtension("KHR_parallel_shader_compile")}};function c(r,t,e,s){return t?s!==t&&r.bindBuffer(e,t.glName):r.bindBuffer(e,null),t}function tt(r,t){switch(r){case g.POINTS:return 2*t;case g.TRIANGLES:return t/3;case g.TRIANGLE_STRIP:case g.TRIANGLE_FAN:return t-2;default:return 0}}export{Jt as o,ne as v};
