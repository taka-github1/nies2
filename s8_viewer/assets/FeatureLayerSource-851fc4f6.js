import{eT as C,H as k,k as O,l as v,eU as P,bD as L,E as J,eV as I,a8 as g,R as T,eW as U,aQ as j,dx as D,dE as Q,aw as $,ay as G,s as E,eX as V,eY as W,d5 as H,eB as Y,ed as X,eZ as M,e_ as Z,g as x,e$ as z,b3 as B,w as K,dW as ee,f0 as te,aS as se,m as ae,aY as re}from"./index-6a6230c9.js";import{e as ie}from"./mat4f64-1413b4a7.js";import{m as ne}from"./MeshGeoreferencedRelativeVertexSpace-c8574543.js";import{r as oe}from"./vec32-0d2d8ac6.js";import{A as ue}from"./External-02365206.js";import{isFeatureIdentifierArrayWithGlobalId as le,isFeatureIdentifierArrayWithObjectId as de}from"./editingSupport-5f0114ca.js";import{o as ce}from"./clientSideDefaults-51c01213.js";import{x as pe}from"./QueryTask-1271232e.js";import{s as he}from"./executeQueryJSON-5eac7ba6.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./executeForIds-d0bb7de0.js";import"./query-537b8104.js";import"./pbfQueryUtils-8a6df888.js";import"./pbf-f1846a04.js";import"./OptimizedGeometry-196224d4.js";import"./OptimizedFeature-4701473b.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./executeQueryPBF-71b7325f.js";import"./featureConversionUtils-c181d337.js";function ye(t){const{vertexSpace:e}=t;if(e.isRelative)return t.clone();const{anchor:a}=t,s=a.clone(),r=C(me,[-s.x,-s.y,-s.z]),o=new ne({origin:[s.x,s.y,s.z]}),i=t.cloneWithVertexSpace(o),{position:u}=i.vertexAttributes;return i.vertexAttributes.position=oe(new Float64Array(u.length),u,r),i.vertexAttributesChanged(),i}const me=ie(),ge=new k({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),fe=new Set(["Feature Layer","Oriented Imagery Layer","Table"]),Re=new k({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let F=class extends P{constructor(){super(...arguments),this.type="feature-layer",this.refresh=L(async()=>{var a,s;await this.load();const t=(a=this.sourceJSON.editingInfo)==null?void 0:a.lastEditDate;if(t==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const e=t!==((s=this.sourceJSON.editingInfo)==null?void 0:s.lastEditDate);return{dataChanged:e,updates:e?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}),this._ongoingAssetUploads=new Map}load(t){const e=this.layer.sourceJSON,a=this._fetchService(e,{...t}).then(()=>this.layer.setUserPrivileges(this.sourceJSON.serviceItemId,t)).then(()=>this._ensureLatestMetadata(t));return this.addResolvingPromise(a),Promise.resolve(this)}get queryTask(){var c;const{capabilities:t,parsedUrl:e,dynamicDataSource:a,infoFor3D:s,gdbVersion:r,spatialReference:o,fieldsIndex:i}=this.layer,u=J("featurelayer-pbf")&&(t==null?void 0:t.query.supportsFormatPBF)&&s==null,n=((c=t==null?void 0:t.operations)==null?void 0:c.supportsQueryAttachments)??!1;return new pe({url:e.path,pbfSupported:u,fieldsIndex:i,infoFor3D:s,dynamicDataSource:a,gdbVersion:r,sourceSpatialReference:o,queryAttachmentsSupported:n})}async addAttachment(t,e){await this.load();const{layer:a}=this;await I(a,"editing");const s=t.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/addAttachment",o=this._getLayerRequestOptions(),i=this._getFormDataForAttachment(e,o.query);try{const u=await g(r,{body:i});return this._createFeatureEditResult(u.data.addAttachmentResult)}catch(u){throw this._createAttachmentErrorResult(s,u)}}async updateAttachment(t,e,a){await this.load();const{layer:s}=this;await I(s,"editing");const r=t.attributes[s.objectIdField],o=s.parsedUrl.path+"/"+r+"/updateAttachment",i=this._getLayerRequestOptions({query:{attachmentId:e}}),u=this._getFormDataForAttachment(a,i.query);try{const n=await g(o,{body:u});return this._createFeatureEditResult(n.data.updateAttachmentResult)}catch(n){throw this._createAttachmentErrorResult(r,n)}}async applyEdits(t,e){var _,A,R,S,q,N;await this.load();const{layer:a}=this;await I(a,"editing");const s=a.infoFor3D,r=s!=null,o=r||((e==null?void 0:e.globalIdUsed)??!1),i=r?await this._uploadMeshesAndGetAssetMapEditsJSON(t):null,u=((_=t.addFeatures)==null?void 0:_.map(w=>this._getFeatureJSON(w,s)))??[],n=(await Promise.all(u)).filter(T),c=((A=t.updateFeatures)==null?void 0:A.map(w=>this._getFeatureJSON(w,s)))??[],h=(await Promise.all(c)).filter(T),y=this._getFeatureIds(t.deleteFeatures,o);U(n,h,a.spatialReference);const p=await this._getAttachmentEditsJSON(t),b=a.capabilities.editing.supportsAsyncApplyEdits&&r,l={gdbVersion:(e==null?void 0:e.gdbVersion)||a.gdbVersion,rollbackOnFailure:e==null?void 0:e.rollbackOnFailureEnabled,useGlobalIds:o,returnEditMoment:e==null?void 0:e.returnEditMoment,usePreviousEditMoment:e==null?void 0:e.usePreviousEditMoment,sessionId:e==null?void 0:e.sessionId,async:b};e!=null&&e.returnServiceEditsOption?(l.edits=JSON.stringify([{id:a.layerId,adds:n,updates:h,deletes:y,attachments:p,assetMaps:i}]),l.returnServiceEditsOption=ge.toJSON(e==null?void 0:e.returnServiceEditsOption),l.returnServiceEditsInSourceSR=e==null?void 0:e.returnServiceEditsInSourceSR):(l.adds=n.length?JSON.stringify(n):null,l.updates=h.length?JSON.stringify(h):null,l.deletes=y.length?o?JSON.stringify(y):y.join(","):null,l.attachments=p&&JSON.stringify(p),l.assetMaps=i!=null?JSON.stringify(i):void 0);const d=this._getLayerRequestOptions({method:"post",query:l}),m=e!=null&&e.returnServiceEditsOption?a.url:a.parsedUrl.path,f=b?await this._asyncApplyEdits(m+"/applyEdits",d):await g(m+"/applyEdits",d);if(!((R=a.capabilities.operations)!=null&&R.supportsEditing)&&((q=(S=a.effectiveCapabilities)==null?void 0:S.operations)!=null&&q.supportsEditing)){const w=(N=re)==null?void 0:N.findCredential(a.url);await(w==null?void 0:w.refreshToken())}return this._createEditsResult(f)}async deleteAttachments(t,e){await this.load();const{layer:a}=this;await I(a,"editing");const s=t.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await g(r,this._getLayerRequestOptions({query:{attachmentIds:e.join(",")},method:"post"}))).data.deleteAttachmentResults.map(this._createFeatureEditResult)}catch(o){throw this._createAttachmentErrorResult(s,o)}}fetchRecomputedExtents(t={}){const e=t.signal;return this.load({signal:e}).then(async()=>{const a=this._getLayerRequestOptions({...t,query:{returnUpdates:!0}}),{layerId:s,url:r}=this.layer,{data:o}=await g(`${r}/${s}`,a),{id:i,extent:u,fullExtent:n,timeExtent:c}=o,h=u||n;return{id:i,fullExtent:h&&j.fromJSON(h),timeExtent:c&&D.fromJSON({start:c[0],end:c[1]})}})}async queryAttachments(t,e={}){await this.load();const a=this._getLayerRequestOptions(e);return this.queryTask.executeAttachmentQuery(t,a)}async queryFeatures(t,e){var s;await this.load();const a=await this.queryTask.execute(t,{...e,query:this._createRequestQueryOptions(e)});return(s=t.outStatistics)!=null&&s.length&&a.features.length&&a.features.forEach(r=>{var i;const o=r.attributes;(i=t.outStatistics)==null||i.forEach(({outStatisticFieldName:u})=>{const n=u&&u.toLowerCase();n&&n in o&&u!==n&&(o[u]=o[n],delete o[n])})}),a}async queryFeaturesJSON(t,e){return await this.load(),this.queryTask.executeJSON(t,{...e,query:this._createRequestQueryOptions(e)})}async queryObjectIds(t,e){return await this.load(),this.queryTask.executeForIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeatureCount(t,e){return await this.load(),this.queryTask.executeForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryExtent(t,e){return await this.load(),this.queryTask.executeForExtent(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeatures(t,e){return await this.load(),this.queryTask.executeRelationshipQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeaturesCount(t,e){return await this.load(),this.queryTask.executeRelationshipQueryForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopFeatures(t,e){return await this.load(),this.queryTask.executeTopFeaturesQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopObjectIds(t,e){return await this.load(),this.queryTask.executeForTopIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopExtents(t,e){return await this.load(),this.queryTask.executeForTopExtents(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopCount(t,e){return await this.load(),this.queryTask.executeForTopCount(t,{...e,query:this._createRequestQueryOptions(e)})}async fetchPublishingStatus(){if(!Q(this.layer.url))return"unavailable";const t=$(this.layer.url,"status"),e=await g(t,{query:{f:"json"}});return Re.fromJSON(e.data.status)}async uploadAssets(t,e){const{uploadAssets:a}=await G(()=>import("./uploadAssets-9a640b88.js"),["./uploadAssets-9a640b88.js","./index-6a6230c9.js","./index-ed438937.css","./External-02365206.js"],import.meta.url);return a(t,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},e)}async _asyncApplyEdits(t,e){const a=(await g(t,e)).data.statusUrl;for(;;){const s=(await g(a,{query:{f:"json"},responseType:"json"})).data;switch(s.status){case"Completed":return g(s.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new E("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new E("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await V(be)}}_createRequestQueryOptions(t){const e={...this.layer.customParameters,token:this.layer.apiKey,...t==null?void 0:t.query};return this.layer.datesInUnknownTimezone&&(e.timeReferenceUnknownClient=!0),e}async _fetchService(t,e){if(!t){const s={};J("featurelayer-advanced-symbols")&&(s.returnAdvancedSymbols=!0),e!=null&&e.cacheBust&&(s._ts=Date.now());const{data:r}=await g(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:s,signal:e==null?void 0:e.signal}));t=r}this.sourceJSON=await this._patchServiceJSON(t,e==null?void 0:e.signal);const a=t.type;if(!fe.has(a))throw new E("feature-layer-source:unsupported-type",`Source type "${a}" is not supported`)}async _patchServiceJSON(t,e){var a;if(t.type!=="Table"&&t.geometryType&&!((a=t==null?void 0:t.drawingInfo)!=null&&a.renderer)&&!t.defaultSymbol){const s=ce(t.geometryType).renderer;W("drawingInfo.renderer",s,t)}if(t.geometryType==="esriGeometryMultiPatch"&&t.infoFor3D&&(t.geometryType="mesh"),t.extent==null)try{const{data:s}=await g(this.layer.url,this._getLayerRequestOptions({signal:e}));s.spatialReference&&(t.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:s.spatialReference})}catch(s){H(s)}return t}async _ensureLatestMetadata(t){if(this.layer.userHasUpdateItemPrivileges&&this.sourceJSON.cacheMaxAge>0)return this._fetchService(null,{...t,cacheBust:!0})}async _getFeatureJSON(t,e){const{geometry:a}=t,s={...t.attributes};if(e!=null&&(a==null?void 0:a.type)==="mesh"){const{transformFieldRoles:r}=e,{origin:o,spatialReference:i,transform:u}=a,n=this.layer.spatialReference;await Y(i,n);const c=X(o,n);if(s[r.originX]=c.x,s[r.originY]=c.y,s[r.originZ]=c.z??0,u!=null){const{translation:h,scale:y,rotation:p}=u,{vertexSpace:b}=a,l=b.isGeoreferenced?1:M(i)/M(n);s[r.translationX]=h[0]*l,s[r.translationY]=h[2]*l,s[r.translationZ]=-h[1]*l,s[r.scaleX]=y[0],s[r.scaleY]=y[2],s[r.scaleZ]=y[1],s[r.rotationX]=p[0],s[r.rotationY]=p[2],s[r.rotationZ]=-p[1],s[r.rotationDeg]=p[3]}return{attributes:s}}return a==null?{attributes:s}:a.type==="mesh"||a.type==="extent"?null:{geometry:a.toJSON(),attributes:s}}async _getAttachmentEditsJSON(t){const e=await Promise.all((t.addAttachments??[]).map(r=>this._getAttachmentEditJSON(r))),a=await Promise.all((t.updateAttachments??[]).map(r=>this._getAttachmentEditJSON(r))),s=t.deleteAttachments??[];return e.length||a.length||s.length?{adds:e,updates:a,deletes:[...s]}:null}async _getAttachmentEditJSON(t){const{feature:e,attachment:a}=t,{globalId:s,name:r,contentType:o,data:i,uploadId:u}=a,n={globalId:s,parentGlobalId:null,contentType:null,name:null,uploadId:null,data:null};if(e&&(n.parentGlobalId="attributes"in e?e.attributes&&e.attributes[this.layer.globalIdField]:e.globalId),u)n.uploadId=u;else if(i){const c=await Z(i);c&&(n.contentType=c.mediaType,n.data=c.data),i instanceof File&&(n.name=i.name)}return r&&(n.name=r),o&&(n.contentType=o),n}async _uploadMeshesAndGetAssetMapEditsJSON(t){const{addAssetFeatures:e}=t;if(!(e!=null&&e.length))return null;const a=await this._filterRedundantAssetMaps(e);if(!(e!=null&&e.length))return null;const s=new Array,r=new Map;for(const o of a){const{geometry:i}=o,{vertexSpace:u}=i;if(u.isRelative)s.push(i);else{const n=ye(i);r.set(n,i),o.geometry=n,s.push(n)}}await this.uploadAssets(s);for(const[o,i]of r)i.addExternalSources(o.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(a),updates:[],deletes:[]}}_getAssetMapEditsJSON(t){const e=new Array,a=this.layer.globalIdField,s=this.layer.parsedUrl;for(const r of t){const o=r.geometry,{metadata:i}=o,u=i.getExternalSourcesOnService(s),n=r.getAttribute(a);if(u.length===0){x.getLogger(this).error(`Skipping feature ${n}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:c}=u.find(ue)??u[0],{vertexSpace:h}=o,y=h.isGeoreferenced?["PROJECT_VERTICES"]:[];for(const p of c)p.parts.length===1?e.push({globalId:z(),parentGlobalId:n,assetName:p.assetName,assetHash:p.parts[0].partHash,flags:y}):x.getLogger(this).error(`Skipping asset ${p.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return e}_getFeatureIds(t,e){if(!t||t.length===0)return[];if(e&&le(t))return t.map(r=>r.globalId);if(de(t))return t.map(r=>r.objectId);const{layer:a}=this,s=e?a.globalIdField:a.objectIdField;return s?t.map(r=>r.getAttribute(s)):[]}_createEditsResult(t){var n,c,h,y,p,b;const e=t.data,{layerId:a}=this.layer,s=[];let r=null;if(Array.isArray(e))for(const l of e)s.push({id:l.id,editedFeatures:l.editedFeatures}),l.id===a&&(r={addResults:l.addResults??[],updateResults:l.updateResults??[],deleteResults:l.deleteResults??[],attachments:l.attachments,editMoment:l.editMoment});else r=e;const o=r==null?void 0:r.assetMaps;if(o){for(const l of o.addResults)l.success||x.getLogger(this).error(`Failed to map asset to feature with globalId ${l.globalId}.`);for(const l of o.updateResults)l.success||x.getLogger(this).error(`Failed to map asset to feature with globalId ${l.globalId}.`)}const i=r==null?void 0:r.attachments,u={addFeatureResults:((n=r==null?void 0:r.addResults)==null?void 0:n.map(this._createFeatureEditResult,this))??[],updateFeatureResults:((c=r==null?void 0:r.updateResults)==null?void 0:c.map(this._createFeatureEditResult,this))??[],deleteFeatureResults:((h=r==null?void 0:r.deleteResults)==null?void 0:h.map(this._createFeatureEditResult,this))??[],addAttachmentResults:i&&i.addResults?i.addResults.map(this._createFeatureEditResult,this):[],updateAttachmentResults:i&&i.updateResults?i.updateResults.map(this._createFeatureEditResult,this):[],deleteAttachmentResults:i&&i.deleteResults?i.deleteResults.map(this._createFeatureEditResult,this):[]};if(r!=null&&r.editMoment&&(u.editMoment=r.editMoment),s.length>0){u.editedFeatureResults=[];for(const l of s){const{editedFeatures:d}=l,m=d!=null&&d.spatialReference?new B(d.spatialReference):null;u.editedFeatureResults.push({layerId:l.id,editedFeatures:{adds:((y=d==null?void 0:d.adds)==null?void 0:y.map(f=>this._createEditedFeature(f,m)))||[],updates:((p=d==null?void 0:d.updates)==null?void 0:p.map(f=>({original:this._createEditedFeature(f[0],m),current:this._createEditedFeature(f[1],m)})))||[],deletes:((b=d==null?void 0:d.deletes)==null?void 0:b.map(f=>this._createEditedFeature(f,m)))||[],spatialReference:m}})}}return u}_createEditedFeature(t,e){return new K({attributes:t.attributes,geometry:ee({...t.geometry,spatialReference:e})})}_createFeatureEditResult(t){const e=t.success===!0?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new E("feature-layer-source:edit-failure",e.description,{code:e.code}):null}}_createAttachmentErrorResult(t,e){const a=e.details.messages&&e.details.messages[0]||e.message,s=e.details.httpStatus||e.details.messageCode;return{objectId:t,globalId:null,error:new E("feature-layer-source:attachment-failure",a,{code:s})}}_getFormDataForAttachment(t,e){const a=t instanceof FormData?t:t&&t.elements?new FormData(t):null;if(a)for(const s in e){const r=e[s];r!=null&&(a.set?a.set(s,r):a.append(s,r))}return a}_getLayerRequestOptions(t={}){const{parsedUrl:e,gdbVersion:a,dynamicDataSource:s}=this.layer;return{...t,query:{gdbVersion:a,layer:s?JSON.stringify({source:s}):void 0,...e.query,f:"json",...this._createRequestQueryOptions(t)},responseType:"json"}}async _filterRedundantAssetMaps(t){const{layer:e}=this,{globalIdField:a,infoFor3D:s,parsedUrl:r}=e;if(s==null||a==null)return t;const o=te(s);if(o==null)return t;const i=$(r.path,`../${o.id}`),u=new Array,n=new Array;for(const d of t)d.geometry.metadata.getExternalSourcesOnService(r).length>0?n.push(d):u.push(d);const c=n.map(d=>d.getAttribute(a)).filter(T);if(c.length===0)return t;const{assetMapFieldRoles:{parentGlobalId:h,assetHash:y}}=s,p=new se;p.where=`${h} IN (${c.map(d=>`'${d}'`)})`,p.outFields=[y,h],p.returnGeometry=!1;const b=await he(i,p),{features:l}=b;return l.length===0?t:[...u,...n.filter(d=>{const m=d.getAttribute(a);if(!m)return!0;const{metadata:f}=d.geometry,_=l.filter(R=>R.getAttribute(h)===m);if(_.length===0)return!0;const A=_.map(R=>R.getAttribute(y));return f.getExternalSourcesOnService(r).flatMap(({source:R})=>R.flatMap(S=>S.parts.map(q=>q.partHash))).some(R=>A.every(S=>R!==S))})]}};O([v()],F.prototype,"type",void 0),O([v({constructOnly:!0})],F.prototype,"layer",void 0),O([v({readOnly:!0})],F.prototype,"queryTask",null),F=O([ae("esri.layers.graphics.sources.FeatureLayerSource")],F);const be=1e3,Le=F;export{Le as default};
